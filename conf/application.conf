# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="OOEbU3oDf9K?Y@:>_77/ggTp@7<OFsrBoaQoY_olZI]qmGoAyV_w0gvGcptYIC/G"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url="jdbc:postgresql://localhost/scoap3"
db.default.url=${?DATABASE_URL}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Auto apply evolutions
applyEvolutions.default=true

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Hub configuration
# ~~~~~

# Email address of site administrator
hub.admin.email="rrodgers@mit.edu"

# URL of indexing service
hub.index.url="http://localhost:9200/scoap3/"
hub.index.url=${?BONSAI_URL}

# URL of email service, and API key to use it
hub.email.url="https://api.mailgun.net/v2/topichub.mailgun.org/messages"
hub.email.apikey="fake"
hub.email.apikey=${?MAILGUN_API_KEY}

mit.client.id="fake_key"
mit.client.secret="fake_secret"
mit.client.id=${?MIT_KEY}
mit.client.secret=${?MIT_SECRET}
mit.redirect.url="https://oidc.mit.edu/authorize?client_id=%s&redirect_uri=%s&scope=%s&state=%s&response_type=code"

