# Auth Client ID and Secret are supplied by OAuth provider
auth.client.id="fake_auth_id"
auth.client.secret="fake_auth_secret"
auth.client.id=${?AUTH_ID}
auth.client.secret=${?AUTH_SECRET}

# Google Oauth Config Example Config
#auth.client.token_url="https://accounts.google.com/o/oauth2/token"
#auth.client.profile_url="https://www.googleapis.com/oauth2/v2/userinfo"
#auth.response.name_field="email"
#auth.response.sub_field="id"
#auth.response.email_field="email"
#auth.reponse.identity_provider="https://accounts.google.com/"
#auth.login_text="Login with Google"

# MIT OAuth Example Config
auth.client.token_url="https://oidc.mit.edu/token"
auth.client.profile_url="https://oidc.mit.edu/userinfo"
auth.response.name_field="name"
auth.response.sub_field="sub"
auth.response.email_field="email"
auth.reponse.identity_provider="https://oidc.mit.edu/"
auth.client.external_auth_url="https://oidc.mit.edu/authorize?client_id=%s&redirect_uri=%s&scope=%s&state=%s&response_type=code"
auth.login_text="Login with your MIT ID"

# Callback URL needs to be configured in the OAuth Provider as well
auth.client.callback_url="http://localhost:9000/_oauth-callback"
auth.client.callback_url=${?AUTH_CALLBACK_URL}

# All auth values can be overridden via ENV as follows:
auth.client.token_url=${?AUTH_CLIENT_TOKEN_URL}
auth.client.profile_url=${?AUTH_CLIENT_PROFILE_URL}
auth.response.name_field=${?AUTH_RESPONSE_NAME_FIELD}
auth.response.sub_field=${?AUTH_RESPONSE_SUB_FIELD}
auth.response.email_field=${?AUTH_RESPONSE_EMAIL_FIELD}
auth.reponse.identity_provider=${?AUTH_RESPONSE_IDENTITY_PROVIDER}
auth.client.external_auth_url=${?AUTH_CLIENT_EXTERNAL_AUTH_URL}
auth.login_text=${?AUTH_LOGIN_TEXT}
